{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\game.js\";\nimport React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport { BrowserRouter } from 'react-router-dom';\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = event => {\n      var userObject = JSON.parse(localStorage.getItem(\"userObject\"));\n      console.log(userObject);\n      const bidAmount = event.target.innerHTML;\n      this.setState({\n        bidAmount\n      });\n      userObject.credits = userObject.credits - bidAmount;\n      console.log(bidAmount); // Axios\n      //   .put('http://localhost:3001/login', {\n      //     credits: (this.state.credits - bidAmount)\n      //   })\n      //   .then(response => {\n      //     console.log(response)\n      //     console.log(\"Wager Placed!\")\n      //     this.setState({\n      //       redirectTo: '/'\n      //     })\n      //   }).catch(error => {\n      //       console.log(error)\n      //   });\n\n      var id = this.state.currentBid._id;\n      Axios.put('http://localhost:3001/bid/', {\n        _id: id,\n        teamOneBidAmount: this.state.bidAmount,\n        teamOneBettorName: userObject.username,\n        betPlaced: true\n      });\n    };\n\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null,\n      currentBid: {},\n      loggedIn: false\n    };\n  }\n\n  componentDidMount() {\n    // this.getUser();\n    var userObject = JSON.parse(localStorage.getItem(\"userObject\"));\n    this.setState({\n      credits: this.state.credits\n    });\n    Axios.get(\"http://localhost:3001/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        bid: result.data\n      }, () => {\n        for (var i = 0; i < result.data.length; i++) {\n          if (\"/bid/\" + result.data[i]._id === window.location.pathname) {\n            this.setState({\n              currentBid: result.data[i],\n              credits: userObject.credits\n            });\n          }\n        }\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          bid = _this$state.bid,\n          isLoaded = _this$state.isLoaded,\n          loggedIn = _this$state.loggedIn,\n          credits = _this$state.credits,\n          bidAmount = _this$state.bidAmount,\n          currentBid = _this$state.currentBid;\n\n    if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Credits: \", this.state.credits), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Betting Ticket\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.currentBid.teamOneName, \" vs \", this.state.currentBid.teamTwoName), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Time: \", moment(new Date(parseInt(this.state.currentBid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Bid Amount\"), React.createElement(MDBDropdown, {\n        className: \"MBDDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(MDBDropdownToggle, {\n        id: \"upcoming-games\",\n        className: \"home-button\",\n        caret: true,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Home\"), React.createElement(MDBDropdownMenu, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 5,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"5\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 10,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"10\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 25,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"25\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 50,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"50\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 100,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"100\"))), React.createElement(Form.Control, {\n        type: \"homeBidAmount\",\n        placeholder: \"$0\",\n        id: \"homeBidAmount\",\n        name: \"homeBidAmount\",\n        active: this.state.bidAmount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.onClickHandler,\n        variant: \"warning\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Submit Home Bet\"))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Card","Button","moment","Axios","Col","Form","Spinner","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","BrowserRouter","GamePage","Component","constructor","props","onClickHandler","event","userObject","JSON","parse","localStorage","getItem","console","log","bidAmount","target","innerHTML","setState","credits","id","state","currentBid","_id","put","teamOneBidAmount","teamOneBettorName","username","betPlaced","bid","bidamount","undefined","isLoaded","loggedIn","componentDidMount","get","then","result","data","i","length","window","location","pathname","error","render","span","offset","teamOneName","teamTwoName","Date","parseInt","commencementTime","format"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport { BrowserRouter } from 'react-router-dom';\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null,\n      currentBid: {},\n      loggedIn: false\n    }\n  }\n\n  componentDidMount() {\n    // this.getUser();\n    var userObject = JSON.parse(localStorage.getItem(\"userObject\"));\n    \n    this.setState({\n      credits: this.state.credits\n    })\n  \n    Axios.get(\"http://localhost:3001/bid\")\n      .then((result) => {\n        this.setState({\n          isLoaded: true,\n          bid: result.data\n        }, () => {\n          for (var i = 0; i < result.data.length; i++) {\n            if ((\"/bid/\" + result.data[i]._id) === window.location.pathname) {\n              this.setState({\n                currentBid: result.data[i],\n                credits: userObject.credits\n              })\n\n            }\n          }\n        });\n      },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n  }\n\n  onClickHandler = event => {\n    var userObject = JSON.parse(localStorage.getItem(\"userObject\"));\n    console.log(userObject)\n    \n    const bidAmount = event.target.innerHTML;\n    this.setState({ bidAmount });\n    userObject.credits = userObject.credits - bidAmount;\n    console.log(bidAmount)\n    // Axios\n    //   .put('http://localhost:3001/login', {\n    //     credits: (this.state.credits - bidAmount)\n    //   })\n    //   .then(response => {\n    //     console.log(response)\n    //     console.log(\"Wager Placed!\")\n    //     this.setState({\n    //       redirectTo: '/'\n    //     })\n    //   }).catch(error => {\n    //       console.log(error)\n    //   });\n     \n      var id = this.state.currentBid._id;\n    Axios.put('http://localhost:3001/bid/', {\n      _id: id,\n      teamOneBidAmount: this.state.bidAmount,\n      teamOneBettorName: userObject.username,\n      betPlaced: true\n    })\n  };\n  render() {\n\n    const { bid, isLoaded, loggedIn, credits, bidAmount, currentBid } = this.state;\n    if (!isLoaded) {\n      return <Spinner animation=\"grow\" variant=\"warning\" />\n    } else {\n      return (\n\n        <Col md={{ span: 6, offset: 3 }}>\n          <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n            <Card.Text>Credits: {this.state.credits}</Card.Text>\n            <Card.Text>Betting Ticket</Card.Text>\n            <Card.Body>\n              <Card.Title>{this.state.currentBid.teamOneName} vs {this.state.currentBid.teamTwoName}</Card.Title>\n\n              <Card.Text>\n                Time: {moment(new Date(parseInt(this.state.currentBid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n              </Card.Text>\n\n              <Form.Label>Bid Amount</Form.Label>\n              <MDBDropdown className=\"MBDDropdown\">\n                      <MDBDropdownToggle id=\"upcoming-games\" className=\"home-button\" caret color=\"warning\">\n                       Home\n                        </MDBDropdownToggle>\n                      <MDBDropdownMenu basic>\n                        <MDBDropdownItem active={this.state.bidAmount === 5} onClick={this.onClickHandler}>5</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 10} onClick={this.onClickHandler}>10</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 25} onClick={this.onClickHandler}>25</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 50} onClick={this.onClickHandler}>50</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 100} onClick={this.onClickHandler}>100</MDBDropdownItem>\n                      </MDBDropdownMenu>\n                    </MDBDropdown>\n              <Form.Control\n                type=\"homeBidAmount\"\n                placeholder=\"$0\"\n                id=\"homeBidAmount\"\n                name=\"homeBidAmount\"\n                active={this.state.bidAmount}\n                 />\n              <Button onClick={this.onClickHandler} variant=\"warning\" type=\"submit\">\n                Submit Home Bet\n  \t\t\t\t\t\t</Button>\n\n\n            </Card.Body>\n          </Card>\n        </Col>\n      );\n    };\n  };\n};\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}