{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\game.js\";\nimport React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3000/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        bid: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const bid = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Card, {\n        cla: true,\n        ssName: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Betting Ticket\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, bid.teamOneName, \" vs \", bid.teamTwoName), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Time: \", moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Component","Card","Button","moment","Axios","Col","ButtonToolbar","Spinner","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","GamePage","constructor","props","state","bid","isLoaded","componentDidMount","get","then","result","setState","data","error","render","message","span","offset","teamOneName","teamTwoName","Date","parseInt","commencementTime","format"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\n\nclass GamePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bid: {},\n            isLoaded: false\n        }\n    }\n    componentDidMount() {\n        Axios.get(\"http://localhost:3000/bid\")\n\n            .then((result) => {\n                this.setState({\n                    isLoaded: true,\n                    bid: result.data\n                });\n\n            },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                });\n    }\n\n    render() {\n        const bid = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n          } else if (!isLoaded) {\n            return <Spinner animation=\"grow\" variant=\"warning\" />\n          } else {\n            return (\n            <Col md={{ span: 6, offset: 3 }}>\n            <Card cla ssName=\"jawn\" bg=\"dark\" text=\"white\">\n                <Card.Text>Betting Ticket</Card.Text>\n                <Card.Body>\n      <Card.Title>{bid.teamOneName} vs {bid.teamTwoName}</Card.Title>\n      \n      <Card.Text>\n        Time: {moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n      </Card.Text>\n      <ButtonToolbar>\n    <Button variant=\"warning\" value=\"#\"></Button>\n    <Button variant=\"warning\" value=\"#\"></Button>\n    <Button variant=\"warning\" value=\"#\"></Button>\n    <Button variant=\"warning\" value=\"#\"></Button>\n    <Button variant=\"warning\" value=\"#\"></Button>\n    <Button variant=\"warning\" value=\"#\"></Button>\n    <Button variant=\"warning\" value=\"#\"></Button>\n    <Button variant=\"warning\" value=\"#\"></Button>\n    <Button variant=\"warning\" value=\"#\"></Button>\n    <Button variant=\"warning\" value=\"#\"></Button>\n        </ButtonToolbar>\n    </Card.Body>\n            </Card>\n            </Col>\n        );\n    };\n};\n};\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}