{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\game.js\";\nimport React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {}\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        articles: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Card, {\n      cla: true,\n      ssName: \"jawn\",\n      bg: \"dark\",\n      text: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Component","Card","Button","Col","Row","Container","moment","Axios","ButtonToolbar","Spinner","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","GamePage","constructor","props","state","bid","componentDidMount","get","then","result","setState","isLoaded","articles","data","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,WAAT,EAAsBC,iBAAtB,EAAyCC,eAAzC,EAA0DC,eAA1D,QAAiF,UAAjF;;AAGA,MAAMC,QAAN,SAAuBf,KAAK,CAACC,SAA7B,CAAuC;AACnCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACVC,MAAAA,GAAG,EAAE;AADK,KAAZ;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAChBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,2BAAV,EAEGC,IAFH,CAESC,MAAD,IAAY;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,QAAQ,EAAEH,MAAM,CAACI;AAFL,OAAd;AAKD,KARH,EASKC,KAAD,IAAW;AACT,WAAKJ,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZG,QAAAA;AAFY,OAAd;AAID,KAdL;AAeD;;AAEPC,EAAAA,MAAM,GAAI;AACN,WACA,oBAAC,IAAD;AAAM,MAAA,GAAG,MAAT;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAqBH;;AA/CsC;;AAkDvC,eAAed,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\n\nimport Axios from \"axios\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\n\nclass GamePage extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state= { \n        bid: {}\n      }\n    }\n    componentDidMount() {\n        Axios.get(\"http://localhost:3001/bid\")\n    \n          .then((result) => {\n            this.setState({\n              isLoaded: true,\n              articles: result.data\n            });\n    \n          },\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            });\n      }\n\nrender () {\n    return ( \n    <Card cla ssName=\"jawn\" bg=\"dark\" text=\"white\">\n    {/* <Card.Body>\n      <Card.Title>{bid.teamOneName} vs {bid.teamTwoName}</Card.Title>\n      \n      <Card.Text>\n        Time: {moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n      </Card.Text>\n      <ButtonToolbar>\n     <Button></Button>\n     <Button></Button>\n     <Button></Button>\n     <Button></Button>\n     <Button></Button>\n     <Button></Button>\n     <Button></Button>\n     <Button></Button>\n        </ButtonToolbar>\n    </Card.Body> */}\n  </Card>\n    )\n}\n}\n\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}