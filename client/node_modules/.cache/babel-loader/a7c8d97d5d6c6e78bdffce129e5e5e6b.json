{"ast":null,"code":"import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null\n    };\n  }\n\n  componentDidMount() {\n    const data = {};\n    this.getUser();\n    Axios.get(\"http://localhost:3001/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        bid: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          credits: response.data.user.credits\n        });\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      }\n\n      ;\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log('handleSubmit');\n    Axios.put('http://localhost:3001/user/', {\n      username: this.state.username,\n      password: this.state.password\n    }).then(response => {\n      console.log('login response: ');\n      console.log(response);\n\n      if (response.status === 200) {\n        // update App.js state\n        this.props.updateUser({\n          loggedIn: true,\n          username: response.data.username\n        }); // update the state to redirect to home\n\n        this.setState({\n          redirectTo: '/'\n        });\n      }\n    }).catch(error => {\n      console.log('login error: ');\n      console.log(error);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          bid = _this$state.bid,\n          isLoaded = _this$state.isLoaded,\n          credits = _this$state.credits,\n          bidAmount = _this$state.bidAmount;\n    console.log(bid);\n\n    for (var i = 0; i < bid.length; i++) {\n      console.log(bid[i]._id);\n      console.log(window.location.pathname);\n\n      if (\"/bid/\" + bid[i]._id === window.location.pathname) {// Render HERE\n      }\n    } //     if (!isLoaded) {\n    //         return <Spinner animation=\"grow\" variant=\"warning\" />\n    //       } else {\n    //         return (\n    //         <Col md={{ span: 6, offset: 3 }}>\n    //         <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n    //             <Card.Text>Credits: {this.state.credits}</Card.Text>\n    //             <Card.Text>Betting Ticket</Card.Text>\n    //             <Card.Body>\n    //   <Card.Title>{bid.teamOneName} vs {bid.teamTwoName}</Card.Title>\n    //   <Card.Text>\n    //     Time: {moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n    //   </Card.Text>\n    //   <Form.Label>Bid Amount</Form.Label>\n    // \t\t\t\t\t\t<Form.Control\n    // \t\t\t\t\t\t\ttype=\"bidamount\"\n    // \t\t\t\t\t\t\tplaceholder=\"$0.00\"\n    // \t\t\t\t\t\t\tid=\"bidamount\"\n    // \t\t\t\t\t\t\tname=\"bidamount\"\n    // \t\t\t\t\t\t\tvalue={this.state.bidAmount}\n    // \t\t\t\t\t\t\tonChange={this.handleChange} />\n    // \t<Button onClick={this.handleSubmit} variant=\"warning\" type=\"submit\">\n    // \t\t\t\t\tSubmit\n    // \t\t\t\t\t</Button>\n    // </Card.Body>\n    //         </Card>\n    //         </Col>\n    //     );\n    // };\n\n  }\n\n}\n\n;\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Card","Button","moment","Axios","Col","Form","Spinner","GamePage","Component","constructor","props","state","bid","bidamount","undefined","isLoaded","credits","componentDidMount","data","getUser","get","then","result","setState","error","response","console","log","user","loggedIn","username","handleSubmit","event","preventDefault","put","password","status","updateUser","redirectTo","catch","render","bidAmount","i","length","_id","window","location","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bid: {},\n            bidamount: undefined,\n            isLoaded: false,\n            credits: null\n        }\n    }\n    componentDidMount() {\n      const data = {\n\n      }\n      this.getUser();\n        Axios.get(\"http://localhost:3001/bid\")\n        .then((result) => {\n          this.setState({\n            isLoaded: true,\n            bid: result.data\n          });\n        },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          });\n    }\n    \n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          credits: response.data.user.credits\n\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      };\n    });\n  };\n    handleSubmit(event) {\n      event.preventDefault()\n      console.log('handleSubmit')\n      Axios\n          .put('http://localhost:3001/user/', {\n              username: this.state.username,\n              password: this.state.password\n          })\n          .then(response => {\n              console.log('login response: ')\n              console.log(response)\n              if (response.status === 200) {\n                  // update App.js state\n                  this.props.updateUser({\n                      loggedIn: true,\n                      username: response.data.username\n                  })\n                  // update the state to redirect to home\n                  this.setState({\n                      redirectTo: '/'\n                  })\n              }\n          }).catch(error => {\n              console.log('login error: ')\n              console.log(error);\n          });\n  };\n    render() {\n        \n        const {bid, isLoaded, credits, bidAmount} = this.state;\n       console.log(bid);\n       \n        for(var i = 0; i < bid.length; i++) {\n          console.log(bid[i]._id)\n          console.log(window.location.pathname)\n          if(\"/bid/\" + bid[i]._id === window.location.pathname) {\n              \n              // Render HERE\n            }\n          \n        }\n    //     if (!isLoaded) {\n    //         return <Spinner animation=\"grow\" variant=\"warning\" />\n    //       } else {\n    //         return (\n              \n    //         <Col md={{ span: 6, offset: 3 }}>\n    //         <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n    //             <Card.Text>Credits: {this.state.credits}</Card.Text>\n    //             <Card.Text>Betting Ticket</Card.Text>\n    //             <Card.Body>\n    //   <Card.Title>{bid.teamOneName} vs {bid.teamTwoName}</Card.Title>\n      \n    //   <Card.Text>\n    //     Time: {moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n    //   </Card.Text>\n    //   <Form.Label>Bid Amount</Form.Label>\n\t\t// \t\t\t\t\t\t<Form.Control\n\t\t// \t\t\t\t\t\t\ttype=\"bidamount\"\n\t\t// \t\t\t\t\t\t\tplaceholder=\"$0.00\"\n\t\t// \t\t\t\t\t\t\tid=\"bidamount\"\n\t\t// \t\t\t\t\t\t\tname=\"bidamount\"\n\t\t// \t\t\t\t\t\t\tvalue={this.state.bidAmount}\n\t\t// \t\t\t\t\t\t\tonChange={this.handleChange} />\n    // \t<Button onClick={this.handleSubmit} variant=\"warning\" type=\"submit\">\n\t\t// \t\t\t\t\tSubmit\n  \t// \t\t\t\t\t</Button>\n    \n    // </Card.Body>\n    //         </Card>\n    //         </Col>\n    //     );\n    // };\n};\n};\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}