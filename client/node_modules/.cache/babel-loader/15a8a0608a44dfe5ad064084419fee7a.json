{"ast":null,"code":"// Core module\nvar core = require('mongodb-core'),\n    Instrumentation = require('./lib/apm'); // Set up the connect function\n\n\nvar connect = require('./lib/mongo_client').connect; // Expose error class\n\n\nconnect.MongoError = core.MongoError; // Actual driver classes exported\n\nconnect.Admin = require('./lib/admin');\nconnect.MongoClient = require('./lib/mongo_client');\nconnect.Db = require('./lib/db');\nconnect.Collection = require('./lib/collection');\nconnect.Server = require('./lib/server');\nconnect.ReplSet = require('./lib/replset');\nconnect.Mongos = require('./lib/mongos');\nconnect.ReadPreference = require('./lib/read_preference');\nconnect.GridStore = require('./lib/gridfs/grid_store');\nconnect.Chunk = require('./lib/gridfs/chunk');\nconnect.Logger = core.Logger;\nconnect.Cursor = require('./lib/cursor');\nconnect.GridFSBucket = require('./lib/gridfs-stream'); // Exported to be used in tests not to be used anywhere else\n\nconnect.CoreServer = require('mongodb-core').Server;\nconnect.CoreConnection = require('mongodb-core').Connection; // BSON types exported\n\nconnect.Binary = core.BSON.Binary;\nconnect.Code = core.BSON.Code;\nconnect.Map = core.BSON.Map;\nconnect.DBRef = core.BSON.DBRef;\nconnect.Double = core.BSON.Double;\nconnect.Int32 = core.BSON.Int32;\nconnect.Long = core.BSON.Long;\nconnect.MinKey = core.BSON.MinKey;\nconnect.MaxKey = core.BSON.MaxKey;\nconnect.ObjectID = core.BSON.ObjectID;\nconnect.ObjectId = core.BSON.ObjectID;\nconnect.Symbol = core.BSON.Symbol;\nconnect.Timestamp = core.BSON.Timestamp;\nconnect.BSONRegExp = core.BSON.BSONRegExp;\nconnect.Decimal128 = core.BSON.Decimal128; // Add connect method\n\nconnect.connect = connect; // Set up the instrumentation method\n\nconnect.instrument = function (options, callback) {\n  if (typeof options == 'function') callback = options, options = {};\n  return new Instrumentation(core, options, callback);\n}; // Set our exports to be the connect function\n\n\nmodule.exports = connect;","map":null,"metadata":{},"sourceType":"script"}