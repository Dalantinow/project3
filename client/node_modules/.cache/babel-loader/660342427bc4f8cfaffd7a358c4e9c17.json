{"ast":null,"code":"// import React, { Component } from 'react';\n// import { Route, Link } from 'react-router-dom';\n// import Signup from './components/sign-up';\n// import LoginForm from './components/login-form';\n// import Navbar from './components/navbar';\n// import Card from 'react-bootstrap/Card';\n// import Button from 'react-bootstrap/Button';\n// class App extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       loggedIn: false,\n//       username: null,\n//       error: null,\n//       isLoaded: false,\n//       items: []\n//     },\n//     this.getUser = this.getUser.bind(this)\n//     this.componentDidMount = this.componentDidMount.bind(this)\n//     this.updateUser = this.updateUser.bind(this)\n//   };\n//   componentDidMount() {\n//     this.getUser()\n//     fetch(\"https://api.the-odds-api.com/v3/odds?sport=soccer_epl&region=uk&mkt=h2h&apiKey=68167223b9315fb382f106b4e105f92e\")\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           console.log(result)\n//           this.setState({\n//             isLoaded: true,\n//             items: result.data\n//           });\n//         },\n//         // Note: it's important to handle errors here\n//         // instead of a catch() block so that we don't swallow\n//         // exceptions from actual bugs in components.\n//         (error) => {\n//           this.setState({\n//             isLoaded: true,\n//             error\n//           });\n//         });\n//   };\n//   updateUser(userObject) {\n//     this.setState(userObject)\n//   };\n//   getUser() {\n//     axios.get('http://localhost:3001/user').then(response => {\n//       console.log('Get user response: ')\n//       console.log(response.data)\n//       if (response.data.user) {\n//         console.log('Get User: There is a user saved in the server session: ')\n//         this.setState({\n//           loggedIn: true,\n//           username: response.data.user.username\n//         })\n//       } else {\n//         console.log('Get user: no user');\n//         this.setState({\n//           loggedIn: false,\n//           username: null\n//         });\n//       };\n//     });\n//   };\n//   render() {\n//     const { error, isLoaded, items } = this.state;\n//     if (error) {\n//       return <div>Error: {error.message}</div>;\n//     } else if (!isLoaded) {\n//       return <div>Loading...</div>;\n//     } else {\n//       return (\n//         <div className=\"App\">\n//           <Navjawn updateUser={this.updateUser} loggedIn={this.state.loggedIn} />\n//           {/* greet user if logged in: */}\n//           {this.state.loggedIn &&\n//             <p>Welcome to the party, {this.state.username}!</p>}\n//           <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n//             <a className=\"navbar-brand\" href=\"#\">\n//               Ubetcha{\" \"}\n//             </a>\n//           </nav>\n//           <div> {items.map(item => (\n//             <Card bg=\"dark\" text=\"white\" style={{ width: '22rem' }}>\n//               <Card.Body>\n//                 <Card.Title>{item.teams[0]} vs {item.teams[1]}</Card.Title>\n//                 <Card.Subtitle className=\"mb-2 text-muted\">{item.home_team} at Home</Card.Subtitle>\n//                 <Card.Text>\n//                   League: {item.sport_nice}\n//                 </Card.Text>\n//                 <Card.Text>\n//                   Time: {(item.commence_time)}\n//                 </Card.Text>\n//                 <Card.Subtitle>Bet On:  </Card.Subtitle>\n//                 <Button href=\"#\" variant=\"outline-dark\">{item.teams[0]}</Button>\n//                 <Button href=\"#\" variant=\"outline-dark\">{item.teams[1]}</Button>\n//               </Card.Body>\n//             </Card>\n//           ))}\n//           </div>\n//           {/* Routes to different components */}\n//           <Route\n//             exact path=\"/\"\n//             component={Home} />\n//           <Route\n//             path=\"/login\"\n//             render={() =>\n//               <LoginForm\n//                 updateUser={this.updateUser}\n//               />}\n//           />\n//           <Route\n//             path=\"/signup\"\n//             render={() =>\n//               <Signup />}\n//           />\n//         </div>\n//       );\n//     };\n//   };\n// };\n// export default App;","map":{"version":3,"sources":["c:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\index.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react';\n// import { Route, Link } from 'react-router-dom';\n// import Signup from './components/sign-up';\n// import LoginForm from './components/login-form';\n// import Navbar from './components/navbar';\n// import Card from 'react-bootstrap/Card';\n// import Button from 'react-bootstrap/Button';\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       loggedIn: false,\n//       username: null,\n//       error: null,\n//       isLoaded: false,\n//       items: []\n//     },\n//     this.getUser = this.getUser.bind(this)\n//     this.componentDidMount = this.componentDidMount.bind(this)\n//     this.updateUser = this.updateUser.bind(this)\n//   };\n\n//   componentDidMount() {\n//     this.getUser()\n//     fetch(\"https://api.the-odds-api.com/v3/odds?sport=soccer_epl&region=uk&mkt=h2h&apiKey=68167223b9315fb382f106b4e105f92e\")\n//       .then(res => res.json())\n//       .then(\n//         (result) => {\n//           console.log(result)\n//           this.setState({\n//             isLoaded: true,\n//             items: result.data\n//           });\n//         },\n//         // Note: it's important to handle errors here\n//         // instead of a catch() block so that we don't swallow\n//         // exceptions from actual bugs in components.\n//         (error) => {\n//           this.setState({\n//             isLoaded: true,\n//             error\n//           });\n//         });\n//   };\n\n//   updateUser(userObject) {\n//     this.setState(userObject)\n//   };\n\n//   getUser() {\n//     axios.get('http://localhost:3001/user').then(response => {\n//       console.log('Get user response: ')\n//       console.log(response.data)\n//       if (response.data.user) {\n//         console.log('Get User: There is a user saved in the server session: ')\n\n//         this.setState({\n//           loggedIn: true,\n//           username: response.data.user.username\n//         })\n//       } else {\n//         console.log('Get user: no user');\n//         this.setState({\n//           loggedIn: false,\n//           username: null\n//         });\n//       };\n//     });\n//   };\n\n//   render() {\n//     const { error, isLoaded, items } = this.state;\n//     if (error) {\n//       return <div>Error: {error.message}</div>;\n//     } else if (!isLoaded) {\n//       return <div>Loading...</div>;\n//     } else {\n//       return (\n//         <div className=\"App\">\n//           <Navjawn updateUser={this.updateUser} loggedIn={this.state.loggedIn} />\n//           {/* greet user if logged in: */}\n//           {this.state.loggedIn &&\n//             <p>Welcome to the party, {this.state.username}!</p>}\n//           <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n//             <a className=\"navbar-brand\" href=\"#\">\n//               Ubetcha{\" \"}\n//             </a>\n//           </nav>\n//           <div> {items.map(item => (\n//             <Card bg=\"dark\" text=\"white\" style={{ width: '22rem' }}>\n//               <Card.Body>\n//                 <Card.Title>{item.teams[0]} vs {item.teams[1]}</Card.Title>\n//                 <Card.Subtitle className=\"mb-2 text-muted\">{item.home_team} at Home</Card.Subtitle>\n//                 <Card.Text>\n//                   League: {item.sport_nice}\n//                 </Card.Text>\n//                 <Card.Text>\n//                   Time: {(item.commence_time)}\n//                 </Card.Text>\n//                 <Card.Subtitle>Bet On:  </Card.Subtitle>\n//                 <Button href=\"#\" variant=\"outline-dark\">{item.teams[0]}</Button>\n//                 <Button href=\"#\" variant=\"outline-dark\">{item.teams[1]}</Button>\n//               </Card.Body>\n//             </Card>\n//           ))}\n//           </div>\n\n//           {/* Routes to different components */}\n//           <Route\n//             exact path=\"/\"\n//             component={Home} />\n//           <Route\n//             path=\"/login\"\n//             render={() =>\n//               <LoginForm\n//                 updateUser={this.updateUser}\n//               />}\n//           />\n//           <Route\n//             path=\"/signup\"\n//             render={() =>\n//               <Signup />}\n//           />\n\n//         </div>\n//       );\n//     };\n//   };\n// };\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}