{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\game.js\";\nimport React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null\n    };\n  }\n\n  componentDidMount() {\n    const data = {};\n    this.getUser();\n    Axios.get(\"http://localhost:3001/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        bid: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          credits: response.data.user.credits\n        });\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      }\n\n      ;\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log('handleSubmit');\n    Axios.put('http://localhost:3001/user/', {\n      username: this.state.username,\n      password: this.state.password\n    }).then(response => {\n      console.log('login response: ');\n      console.log(response);\n\n      if (response.status === 200) {\n        // update App.js state\n        this.props.updateUser({\n          loggedIn: true,\n          username: response.data.username\n        }); // update the state to redirect to home\n\n        this.setState({\n          redirectTo: '/'\n        });\n      }\n    }).catch(error => {\n      console.log('login error: ');\n      console.log(error);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          bid = _this$state.bid,\n          isLoaded = _this$state.isLoaded,\n          credits = _this$state.credits,\n          bidAmount = _this$state.bidAmount;\n    console.log(bid);\n\n    for (var i = 0; i < bid.length; i++) {\n      console.log(bid[i]._id);\n      console.log(window.location.pathname); // if (\"/bid/\" + bid[i]._id === window.location.pathname) {\n\n      return React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Credits: \", this.state.credits), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Betting Ticket\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, bid.teamOneName, \" vs \", bid.teamTwoName), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Time: \", moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Bid Amount\"), React.createElement(Form.Control, {\n        type: \"bidamount\",\n        placeholder: \"$0.00\",\n        id: \"bidamount\",\n        name: \"bidamount\",\n        value: this.state.bidAmount,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        variant: \"warning\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  } // }\n\n\n}\n\n;\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Card","Button","moment","Axios","Col","Form","Spinner","GamePage","Component","constructor","props","state","bid","bidamount","undefined","isLoaded","credits","componentDidMount","data","getUser","get","then","result","setState","error","response","console","log","user","loggedIn","username","handleSubmit","event","preventDefault","put","password","status","updateUser","redirectTo","catch","render","bidAmount","i","length","_id","window","location","pathname","span","offset","teamOneName","teamTwoName","Date","parseInt","commencementTime","format","handleChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null\n    }\n  }\n  componentDidMount() {\n    const data = {\n\n    }\n    this.getUser();\n    Axios.get(\"http://localhost:3001/bid\")\n      .then((result) => {\n        this.setState({\n          isLoaded: true,\n          bid: result.data\n        });\n      },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n  }\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          credits: response.data.user.credits\n\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      };\n    });\n  };\n  handleSubmit(event) {\n    event.preventDefault()\n    console.log('handleSubmit')\n    Axios\n      .put('http://localhost:3001/user/', {\n        username: this.state.username,\n        password: this.state.password\n      })\n      .then(response => {\n        console.log('login response: ')\n        console.log(response)\n        if (response.status === 200) {\n          // update App.js state\n          this.props.updateUser({\n            loggedIn: true,\n            username: response.data.username\n          })\n          // update the state to redirect to home\n          this.setState({\n            redirectTo: '/'\n          })\n        }\n      }).catch(error => {\n        console.log('login error: ')\n        console.log(error);\n      });\n  };\n  render() {\n    const { bid, isLoaded, credits, bidAmount } = this.state;\n    console.log(bid)\n\n    for (var i = 0; i < bid.length; i++) {\n      console.log(bid[i]._id)\n      console.log(window.location.pathname)\n      // if (\"/bid/\" + bid[i]._id === window.location.pathname) {\n        return (\n\n          <Col md={{ span: 6, offset: 3 }}>\n            <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n              <Card.Text>Credits: {this.state.credits}</Card.Text>\n              <Card.Text>Betting Ticket</Card.Text>\n              <Card.Body>\n                <Card.Title>{bid.teamOneName} vs {bid.teamTwoName}</Card.Title>\n\n                <Card.Text>\n                  Time: {moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n                </Card.Text>\n                <Form.Label>Bid Amount</Form.Label>\n                <Form.Control\n                  type=\"bidamount\"\n                  placeholder=\"$0.00\"\n                  id=\"bidamount\"\n                  name=\"bidamount\"\n                  value={this.state.bidAmount}\n                  onChange={this.handleChange} />\n                <Button onClick={this.handleSubmit} variant=\"warning\" type=\"submit\">\n                  Submit\n                  </Button>\n\n              </Card.Body>\n            </Card>\n          </Col>\n        );\n      }\n    }\n  // }\n\n};\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}