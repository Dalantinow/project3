{"ast":null,"code":"/*!\n * Connect - session - Cookie\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n */\n\nvar cookie = require('cookie');\n\nvar deprecate = require('depd')('express-session');\n/**\n * Initialize a new `Cookie` with the given `options`.\n *\n * @param {IncomingMessage} req\n * @param {Object} options\n * @api private\n */\n\n\nvar Cookie = module.exports = function Cookie(options) {\n  this.path = '/';\n  this.maxAge = null;\n  this.httpOnly = true;\n\n  if (options) {\n    if (typeof options !== 'object') {\n      throw new TypeError('argument options must be a object');\n    }\n\n    for (var key in options) {\n      if (key !== 'data') {\n        this[key] = options[key];\n      }\n    }\n  }\n\n  if (this.originalMaxAge === undefined || this.originalMaxAge === null) {\n    this.originalMaxAge = this.maxAge;\n  }\n};\n/*!\n * Prototype.\n */\n\n\nCookie.prototype = {\n  /**\n   * Set expires `date`.\n   *\n   * @param {Date} date\n   * @api public\n   */\n  set expires(date) {\n    this._expires = date;\n    this.originalMaxAge = this.maxAge;\n  },\n\n  /**\n   * Get expires `date`.\n   *\n   * @return {Date}\n   * @api public\n   */\n  get expires() {\n    return this._expires;\n  },\n\n  /**\n   * Set expires via max-age in `ms`.\n   *\n   * @param {Number} ms\n   * @api public\n   */\n  set maxAge(ms) {\n    if (ms && typeof ms !== 'number' && !(ms instanceof Date)) {\n      throw new TypeError('maxAge must be a number or Date');\n    }\n\n    if (ms instanceof Date) {\n      deprecate('maxAge as Date; pass number of milliseconds instead');\n    }\n\n    this.expires = typeof ms === 'number' ? new Date(Date.now() + ms) : ms;\n  },\n\n  /**\n   * Get expires max-age in `ms`.\n   *\n   * @return {Number}\n   * @api public\n   */\n  get maxAge() {\n    return this.expires instanceof Date ? this.expires.valueOf() - Date.now() : this.expires;\n  },\n\n  /**\n   * Return cookie data object.\n   *\n   * @return {Object}\n   * @api private\n   */\n  get data() {\n    return {\n      originalMaxAge: this.originalMaxAge,\n      expires: this._expires,\n      secure: this.secure,\n      httpOnly: this.httpOnly,\n      domain: this.domain,\n      path: this.path,\n      sameSite: this.sameSite\n    };\n  },\n\n  /**\n   * Return a serialized cookie string.\n   *\n   * @return {String}\n   * @api public\n   */\n  serialize: function (name, val) {\n    return cookie.serialize(name, val, this.data);\n  },\n\n  /**\n   * Return JSON representation of this cookie.\n   *\n   * @return {Object}\n   * @api private\n   */\n  toJSON: function () {\n    return this.data;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}