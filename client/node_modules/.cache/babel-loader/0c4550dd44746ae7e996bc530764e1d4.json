{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\game.js\";\nimport React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport { BrowserRouter } from 'react-router-dom';\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = event => {\n      var userObject = JSON.parse(localStorage.getItem(\"userObject\"));\n      const bidAmount = event.target.innerHTML;\n      this.setState({\n        bidAmount\n      });\n      console.log(bidAmount);\n      console.log(userObject.credits);\n      userObject.credits = userObject.credits - bidAmount;\n      console.log(userObject); // localStorage.setItem(\"userObject\", {credits: userObject.credits})\n\n      this.setState({\n        credits: userObject.credits\n      }); //  Axios.get('http://localhost:3001/user/login').then(response => {\n      //    console.log(response)\n      //  })\n      // Axios\n      //   .put('http://localhost:3001/user/login', {\n      //     credits: (this.state.credits - bidAmount)\n      //   })\n      //   .then(response => {\n      //     console.log(response)\n      //     console.log(\"Wager Placed!\")\n      //     this.setState({\n      //       redirectTo: '/'\n      //     })\n      //   }).catch(error => {\n      //       console.log(error)\n      //   });\n\n      var id = this.state.currentBid._id;\n      Axios.put('http://localhost:3001/bid/', {\n        _id: id,\n        teamOneBidAmount: this.state.bidAmount,\n        teamOneBettorName: userObject.username,\n        betPlaced: true\n      }).then(response => {\n        console.log(response);\n      });\n    };\n\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null,\n      currentBid: {},\n      loggedIn: false\n    };\n    this.getUser = this.getUser.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  updateUser(userObject) {\n    this.setState(userObject);\n  }\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username\n        });\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      }\n\n      ;\n    });\n  }\n\n  componentDidMount() {\n    this.getUser();\n    var userObject = JSON.parse(localStorage.getItem(\"userObject\"));\n    Axios.get(\"http://localhost:3001/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        bid: result.data\n      }, () => {\n        for (var i = 0; i < result.data.length; i++) {\n          if (\"/bid/\" + result.data[i]._id === window.location.pathname) {\n            this.setState({\n              currentBid: result.data[i],\n              credits: userObject.credits\n            });\n          }\n        }\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          bid = _this$state.bid,\n          isLoaded = _this$state.isLoaded,\n          loggedIn = _this$state.loggedIn,\n          credits = _this$state.credits,\n          bidAmount = _this$state.bidAmount,\n          currentBid = _this$state.currentBid;\n\n    if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Credits: \", this.state.credits), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Betting Ticket\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.currentBid.teamOneName, \" vs \", this.state.currentBid.teamTwoName), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Time: \", moment(new Date(parseInt(this.state.currentBid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Bid Amount\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(MDBDropdown, {\n        className: \"MBDDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(MDBDropdownToggle, {\n        id: \"upcoming-games\",\n        className: \"team1-button\",\n        caret: true,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.state.currentBid.teamOneName), React.createElement(MDBDropdownMenu, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 5,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"$5\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 10,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"$10\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 25,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"$25\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 50,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"$50\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 100,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"$100\"))), React.createElement(MDBDropdown, {\n        className: \"MBDDropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(MDBDropdownToggle, {\n        id: \"upcoming-games\",\n        className: \"team2-button\",\n        caret: true,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.currentBid.teamTwoName), React.createElement(MDBDropdownMenu, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 5,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"$5\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 10,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"$10\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 25,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"$25\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 50,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"$50\"), React.createElement(MDBDropdownItem, {\n        active: this.state.bidAmount === 100,\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"$100\")))))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Card","Row","moment","Axios","Col","Form","Spinner","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","BrowserRouter","GamePage","Component","constructor","props","onClickHandler","event","userObject","JSON","parse","localStorage","getItem","bidAmount","target","innerHTML","setState","console","log","credits","id","state","currentBid","_id","put","teamOneBidAmount","teamOneBettorName","username","betPlaced","then","response","bid","bidamount","undefined","isLoaded","loggedIn","getUser","bind","componentDidMount","updateUser","get","data","user","result","i","length","window","location","pathname","error","render","span","offset","teamOneName","teamTwoName","Date","parseInt","commencementTime","format"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport { BrowserRouter } from 'react-router-dom';\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null,\n      currentBid: {},\n      loggedIn: false\n    }\n    this.getUser = this.getUser.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n  }\n\n  updateUser(userObject) {\n    this.setState(userObject)\n  };\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      };\n    });\n  };\n\n  componentDidMount() {\n    this.getUser();\n    var userObject = JSON.parse(localStorage.getItem(\"userObject\"));\n    Axios.get(\"http://localhost:3001/bid\")\n      .then((result) => {\n        this.setState({\n          isLoaded: true,\n          bid: result.data\n        }, () => {\n          for (var i = 0; i < result.data.length; i++) {\n            if ((\"/bid/\" + result.data[i]._id) === window.location.pathname) {\n              this.setState({\n                currentBid: result.data[i],\n                credits: userObject.credits\n              })\n\n            }\n          }\n        });\n      },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n  }\n\n  onClickHandler = event => {\n    var userObject = JSON.parse(localStorage.getItem(\"userObject\"));\n    const bidAmount = event.target.innerHTML;\n    this.setState({ bidAmount });\n    console.log(bidAmount)\n    console.log(userObject.credits)\n    userObject.credits = userObject.credits - bidAmount;\n    console.log(userObject)\n    // localStorage.setItem(\"userObject\", {credits: userObject.credits})\n    this.setState({\n      credits: userObject.credits\n    })\n  //  Axios.get('http://localhost:3001/user/login').then(response => {\n  //    console.log(response)\n  //  })\n    // Axios\n    //   .put('http://localhost:3001/user/login', {\n    //     credits: (this.state.credits - bidAmount)\n    //   })\n    //   .then(response => {\n    //     console.log(response)\n    //     console.log(\"Wager Placed!\")\n    //     this.setState({\n    //       redirectTo: '/'\n    //     })\n    //   }).catch(error => {\n    //       console.log(error)\n    //   });\n     \n      var id = this.state.currentBid._id;\n    Axios.put('http://localhost:3001/bid/', {\n      _id: id,\n      teamOneBidAmount: this.state.bidAmount,\n      teamOneBettorName: userObject.username,\n      betPlaced: true\n    })\n    .then(response => {\n      console.log(response)\n    })\n  };\n  render() {\n\n    const { bid, isLoaded, loggedIn, credits, bidAmount, currentBid } = this.state;\n    if (!isLoaded) {\n      return <Spinner animation=\"grow\" variant=\"warning\" />\n    } else {\n      return (\n\n        <Col md={{ span: 6, offset: 3 }}>\n          <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n            <Card.Text>Credits: {this.state.credits}</Card.Text>\n            <Card.Text>Betting Ticket</Card.Text>\n            <Card.Body>\n              <Card.Title>{this.state.currentBid.teamOneName} vs {this.state.currentBid.teamTwoName}</Card.Title>\n\n              <Card.Text>\n                Time: {moment(new Date(parseInt(this.state.currentBid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n              </Card.Text>\n\n              <Form.Label>Bid Amount</Form.Label>\n              <Row>\n              <MDBDropdown className=\"MBDDropdown\">\n                      <MDBDropdownToggle id=\"upcoming-games\" className=\"team1-button\" caret color=\"warning\">\n                      {this.state.currentBid.teamOneName}\n                        </MDBDropdownToggle>\n                      <MDBDropdownMenu basic>\n                        <MDBDropdownItem active={this.state.bidAmount === 5} onClick={this.onClickHandler}>$5</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 10} onClick={this.onClickHandler}>$10</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 25} onClick={this.onClickHandler}>$25</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 50} onClick={this.onClickHandler}>$50</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 100} onClick={this.onClickHandler}>$100</MDBDropdownItem>\n                      </MDBDropdownMenu>\n                    </MDBDropdown>\n                    <MDBDropdown className=\"MBDDropdown\">\n                      <MDBDropdownToggle id=\"upcoming-games\" className=\"team2-button\" caret color=\"warning\">\n                      {this.state.currentBid.teamTwoName}\n                        </MDBDropdownToggle>\n                      <MDBDropdownMenu basic>\n                        <MDBDropdownItem active={this.state.bidAmount === 5} onClick={this.onClickHandler}>$5</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 10} onClick={this.onClickHandler}>$10</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 25} onClick={this.onClickHandler}>$25</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 50} onClick={this.onClickHandler}>$50</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.bidAmount === 100} onClick={this.onClickHandler}>$100</MDBDropdownItem>\n                      </MDBDropdownMenu>\n                    </MDBDropdown>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      );\n    };\n  };\n};\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}