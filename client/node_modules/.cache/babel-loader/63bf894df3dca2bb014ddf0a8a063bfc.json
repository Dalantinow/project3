{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\home.js\";\nimport React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport ControlledCarousel from './carousel';\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport BidButtons from \"../components/bid\";\nimport Axios from \"\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = event => {\n      const league = event.target.innerHTML;\n      this.setState({\n        league\n      });\n\n      let oddsApiCall = sport => {\n        var apiKey = process.env.REACT_APP_apiKey;\n        console.log(apiKey); // fetch(\"https://api.the-odds-api.com/v3/odds?sport=\" + sport + \"&region=us&mkt=h2h&apiKey=\" + apiKey )\n\n        fetch(\"https://api.the-odds-api.com/v3/odds?sport=\" + sport + \"&region=us&mkt=h2h&apiKey=0cf960a0668ac664d33731f63e58304d\").then(res => res.json()).then(result => {\n          this.setState({\n            items: result.data,\n            isLoaded: true\n          });\n        });\n      };\n\n      switch (league) {\n        case \"NFL\":\n          oddsApiCall(\"americanfootball_nfl\");\n          break;\n\n        case \"College Football (NCAAF)\":\n          oddsApiCall(\"americanfootball_ncaaf\");\n          break;\n\n        case \"MMA\":\n          oddsApiCall(\"mma_mixed_martial_arts\");\n          break;\n\n        case \"MLS\":\n          oddsApiCall(\"soccer_usa_mls\");\n          break;\n\n        case \"MLB\":\n          oddsApiCall(\"baseball_mlb\");\n          break;\n\n        default:\n          console.log(\"something went horribly wrong...\");\n      }\n\n      ;\n    };\n\n    this.state = {\n      items: [],\n      league: \"\",\n      loggedIn: false\n    };\n  }\n\n  updateUser(userObject) {\n    this.setState(userObject);\n  }\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username\n        });\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      }\n\n      ;\n    });\n  }\n\n  componentDidMount() {\n    this.getUser();\n    var apiKey = process.env.REACT_APP_apiKey;\n    console.log(apiKey);\n\n    require(\"dotenv\").config();\n\n    var retrievedObject = localStorage.getItem(\"userObject\");\n    console.log(\"retrievedObject\", JSON.parse(retrievedObject));\n  }\n\n  render() {\n    const items = this.state.items;\n    const loggedIn = this.props.loggedIn;\n    console.log(loggedIn);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(ControlledCarousel, {\n      className: \"carousel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card, {\n      bg: \"dark\",\n      text: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Choose a league to get started!\"), React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(MDBDropdown, {\n      className: \"MBDDropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(MDBDropdownToggle, {\n      id: \"upcoming-games\",\n      className: \"home-button\",\n      caret: true,\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Upcoming Games\"), React.createElement(MDBDropdownMenu, {\n      basic: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(MDBDropdownItem, {\n      active: this.state.league === \"americanfootball_ncaaf\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"College Football (NCAAF)\"), React.createElement(MDBDropdownItem, {\n      active: this.state.league === \"americanfootball_nfl\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"NFL\"), React.createElement(MDBDropdownItem, {\n      active: this.state.league === \"baseball_mlb\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"MLB\"), React.createElement(MDBDropdownItem, {\n      active: this.state.league === \"mma_mixed_martial_arts\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"MMA\"), React.createElement(MDBDropdownItem, {\n      active: this.state.league === \"soccer_usa_mls\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"MLS\")))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" \", items.map((item, index) => React.createElement(Card, {\n      className: \"jawn\",\n      bg: \"dark\",\n      text: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      className: \"teamone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, item.teams[0]), React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"VS\"), React.createElement(Card.Title, {\n      className: \"teamtwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, item.teams[1]), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, item.home_team, \" at Home\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"League: \", item.sport_nice), React.createElement(Card.Text, {\n      className: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Time: \", moment(new Date(parseInt(item.commence_time * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(BidButtons, {\n      id: index,\n      away: item.teams[0],\n      home: item.teams[1],\n      time: item.commence_time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\home.js"],"names":["React","Component","Card","Col","Row","Container","moment","ControlledCarousel","ButtonToolbar","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","BidButtons","Axios","Home","constructor","props","onClickHandler","event","league","target","innerHTML","setState","oddsApiCall","sport","apiKey","process","env","REACT_APP_apiKey","console","log","fetch","then","res","json","result","items","data","isLoaded","state","loggedIn","updateUser","userObject","getUser","get","response","user","username","componentDidMount","require","config","retrievedObject","localStorage","getItem","JSON","parse","render","map","item","index","teams","home_team","sport_nice","Date","parseInt","commence_time","format"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport ControlledCarousel from './carousel';\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\nimport BidButtons from \"../components/bid\";\nimport Axios from \"\"\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      league: \"\",\n      loggedIn: false\n    };\n  };\n  updateUser(userObject) {\n    this.setState(userObject)\n  };\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      };\n    });\n  };\n  componentDidMount() {\n    this.getUser();\n    var apiKey = process.env.REACT_APP_apiKey\n    console.log(apiKey);\n    require(\"dotenv\").config();\n    var retrievedObject = localStorage.getItem(\"userObject\");\n    console.log(\"retrievedObject\", JSON.parse(retrievedObject));\n  }\n  onClickHandler = event => {\n    const league = event.target.innerHTML;\n    this.setState({ league })\n    let oddsApiCall = (sport) => {\n      var apiKey = process.env.REACT_APP_apiKey;\n      console.log(apiKey)\n      // fetch(\"https://api.the-odds-api.com/v3/odds?sport=\" + sport + \"&region=us&mkt=h2h&apiKey=\" + apiKey )\n      fetch(\"https://api.the-odds-api.com/v3/odds?sport=\" + sport + \"&region=us&mkt=h2h&apiKey=0cf960a0668ac664d33731f63e58304d\")\n        .then(res =>\n          res.json())\n        .then(\n          (result) => {\n            this.setState({\n              items: result.data,\n              isLoaded: true\n            });\n          },\n        );\n    };\n    switch (league) {\n      case \"NFL\":\n        oddsApiCall(\"americanfootball_nfl\");\n        break;\n      case \"College Football (NCAAF)\":\n        oddsApiCall(\"americanfootball_ncaaf\");\n        break;\n      case \"MMA\":\n        oddsApiCall(\"mma_mixed_martial_arts\");\n        break;\n      case \"MLS\":\n        oddsApiCall(\"soccer_usa_mls\");\n        break;\n      case \"MLB\":\n        oddsApiCall(\"baseball_mlb\");\n        break;\n      default:\n        console.log(\"something went horribly wrong...\");\n    };\n  };\n  render() {\n    const { items } = this.state;\n    const loggedIn = this.props.loggedIn;\n    console.log(loggedIn)\n    return (\n      <div>\n        <Container>\n          <ControlledCarousel className=\"carousel\" />\n          <Row>\n            <Col sm>\n              <Card bg=\"dark\" text=\"white\">\n                <Card.Body>\n                  <Card.Text>Choose a league to get started!</Card.Text>\n                  <ButtonToolbar>\n                    <MDBDropdown className=\"MBDDropdown\">\n                      <MDBDropdownToggle id=\"upcoming-games\" className=\"home-button\" caret color=\"warning\">\n                        Upcoming Games\n                        </MDBDropdownToggle>\n                      <MDBDropdownMenu basic>\n                        <MDBDropdownItem active={this.state.league === \"americanfootball_ncaaf\"} onClick={this.onClickHandler}>College Football (NCAAF)</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.league === \"americanfootball_nfl\"} onClick={this.onClickHandler}>NFL</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.league === \"baseball_mlb\"} onClick={this.onClickHandler}>MLB</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.league === \"mma_mixed_martial_arts\"} onClick={this.onClickHandler}>MMA</MDBDropdownItem>\n                        <MDBDropdownItem active={this.state.league === \"soccer_usa_mls\"} onClick={this.onClickHandler}>MLS</MDBDropdownItem>\n                      </MDBDropdownMenu>\n                    </MDBDropdown>\n                  </ButtonToolbar>\n                </Card.Body>\n              </Card>\n              <br></br>\n              <div> {items.map((item, index) => (\n                <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n                  <Card.Body>\n                    <Card.Title className=\"teamone\">{item.teams[0]}\n                      {/* ({(item.sites[0].odds.h2h[0] !== undefined) ? item.sites[0].odds.h2h[0] : \"No odds yet\"}) */}\n                    </Card.Title>\n                    <Card.Title>VS</Card.Title>\n                    <Card.Title className=\"teamtwo\">{item.teams[1]}\n                      {/* ({(item.sites[1].odds.h2h[1] !== undefined) ? item.sites[1].odds.h2h[1] : \"No odds yet\"}) */}\n\n                    </Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{item.home_team} at Home</Card.Subtitle>\n                    <Card.Text>\n                      League: {item.sport_nice}\n                    </Card.Text>\n                    <Card.Text className=\"time\">\n                      Time: {moment(new Date(parseInt(item.commence_time * 1000))).format('MMMM Do YYYY, h:mm a')}\n                    </Card.Text>\n                    <BidButtons id={index} away={item.teams[0]} home={item.teams[1]} time={item.commence_time} />\n\n                  </Card.Body>\n                </Card>\n              ))}\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div >\n    );\n  };\n};\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}