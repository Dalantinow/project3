{"ast":null,"code":"/*!\n * Connect - session - Store\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar Cookie = require('./cookie');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Session = require('./session');\n\nvar util = require('util');\n/**\n * Module exports.\n * @public\n */\n\n\nmodule.exports = Store;\n/**\n * Abstract base class for session stores.\n * @public\n */\n\nfunction Store() {\n  EventEmitter.call(this);\n}\n/**\n * Inherit from EventEmitter.\n */\n\n\nutil.inherits(Store, EventEmitter);\n/**\n * Re-generate the given requests's session.\n *\n * @param {IncomingRequest} req\n * @return {Function} fn\n * @api public\n */\n\nStore.prototype.regenerate = function (req, fn) {\n  var self = this;\n  this.destroy(req.sessionID, function (err) {\n    self.generate(req);\n    fn(err);\n  });\n};\n/**\n * Load a `Session` instance via the given `sid`\n * and invoke the callback `fn(err, sess)`.\n *\n * @param {String} sid\n * @param {Function} fn\n * @api public\n */\n\n\nStore.prototype.load = function (sid, fn) {\n  var self = this;\n  this.get(sid, function (err, sess) {\n    if (err) return fn(err);\n    if (!sess) return fn();\n    var req = {\n      sessionID: sid,\n      sessionStore: self\n    };\n    fn(null, self.createSession(req, sess));\n  });\n};\n/**\n * Create session from JSON `sess` data.\n *\n * @param {IncomingRequest} req\n * @param {Object} sess\n * @return {Session}\n * @api private\n */\n\n\nStore.prototype.createSession = function (req, sess) {\n  var expires = sess.cookie.expires;\n  var originalMaxAge = sess.cookie.originalMaxAge;\n  sess.cookie = new Cookie(sess.cookie);\n\n  if (typeof expires === 'string') {\n    // convert expires to a Date object\n    sess.cookie.expires = new Date(expires);\n  } // keep originalMaxAge intact\n\n\n  sess.cookie.originalMaxAge = originalMaxAge;\n  req.session = new Session(req, sess);\n  return req.session;\n};","map":null,"metadata":{},"sourceType":"script"}