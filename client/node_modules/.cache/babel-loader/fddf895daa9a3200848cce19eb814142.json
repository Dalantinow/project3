{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\game.js\";\nimport React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { BrowserRouter } from 'react-router-dom';\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n    Axios.get(\"http://localhost:3001/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        bid: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          credits: response.data.user.credits\n        });\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      }\n\n      ;\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    Axios.put('http://localhost:3001/user', {\n      credits: this.state.credits - this.state.bidAmount\n    }).then(response => {\n      console.log(response);\n      console.log(\"Wager Placed!\");\n      this.setState({\n        redirectTo: '/'\n      });\n    }).catch(error => {\n      console.log('login error: ');\n      console.log(error);\n    });\n    Axios.put('http://localhost:3001/bid', {\n      teamOneBidAmount: this.state.bidAmount,\n      teamOneBettorId: this.state.username\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          bid = _this$state.bid,\n          isLoaded = _this$state.isLoaded,\n          credits = _this$state.credits,\n          bidAmount = _this$state.bidAmount;\n    console.log(bid);\n    console.log(window.location.pathname);\n\n    for (var i = 0; i < bid.length; i++) {\n      console.log(bid[i]._id);\n\n      if (\"/bid/\" + bid[i]._id === window.location.pathname) {// RENDER HERE\n      }\n    }\n\n    if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Credits: \", this.state.credits), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Betting Ticket\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, bid.teamOneName, \" vs \", bid.teamTwoName), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Time: \", moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Bid Amount\"), React.createElement(Form.Control, {\n        type: \"bidamount\",\n        placeholder: \"$0.00\",\n        id: \"bidamount\",\n        name: \"bidamount\",\n        value: this.state.bidAmount,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        variant: \"warning\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Card","Button","moment","Axios","Col","Form","Spinner","BrowserRouter","GamePage","Component","constructor","props","state","bid","bidamount","undefined","isLoaded","credits","componentDidMount","getUser","get","then","result","setState","data","error","response","console","log","user","loggedIn","username","handleSubmit","event","preventDefault","put","bidAmount","redirectTo","catch","teamOneBidAmount","teamOneBettorId","render","window","location","pathname","i","length","_id","span","offset","teamOneName","teamTwoName","Date","parseInt","commencementTime","format","handleChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { BrowserRouter } from 'react-router-dom';\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null\n    }\n  }\n  componentDidMount() {\n    this.getUser();\n    Axios.get(\"http://localhost:3001/bid\")\n      .then((result) => {\n        this.setState({\n          isLoaded: true,\n          bid: result.data\n        });\n      },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n  }\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          credits: response.data.user.credits\n\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      };\n    });\n  };\n  handleSubmit(event) {\n    event.preventDefault()\n    Axios\n      .put('http://localhost:3001/user', {\n       credits: this.state.credits - this.state.bidAmount\n      })\n      .then(response => {\n          console.log(response)\n          console.log(\"Wager Placed!\")\n          this.setState({\n            redirectTo: '/'\n          })\n      }).catch(error => {\n        console.log('login error: ')\n        console.log(error);\n      });\n      Axios.put('http://localhost:3001/bid', {\n        teamOneBidAmount: this.state.bidAmount,\n        teamOneBettorId: this.state.username,\n        \n      })\n  };\n  render() {\n\n    const { bid, isLoaded, credits, bidAmount } = this.state;\n    console.log(bid);\n    console.log(window.location.pathname)\n    for (var i = 0; i < bid.length; i++) {\n      console.log(bid[i]._id)\n      if (\"/bid/\" + bid[i]._id === window.location.pathname) {\n\n        // RENDER HERE\n\n      }\n    }\n    if (!isLoaded) {\n      return <Spinner animation=\"grow\" variant=\"warning\" />\n    } else {\n      return (\n\n        <Col md={{ span: 6, offset: 3 }}>\n          <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n            <Card.Text>Credits: {this.state.credits}</Card.Text>\n            <Card.Text>Betting Ticket</Card.Text>\n            <Card.Body>\n              <Card.Title>{bid.teamOneName} vs {bid.teamTwoName}</Card.Title>\n\n              <Card.Text>\n                Time: {moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n              </Card.Text>\n              <Form.Label>Bid Amount</Form.Label>\n              <Form.Control\n                type=\"bidamount\"\n                placeholder=\"$0.00\"\n                id=\"bidamount\"\n                name=\"bidamount\"\n                value={this.state.bidAmount}\n                onChange={this.handleChange} />\n              <Button onClick={this.handleSubmit} variant=\"warning\" type=\"submit\">\n                Submit\n  \t\t\t\t\t\t</Button>\n\n            </Card.Body>\n          </Card>\n        </Col>\n      );\n    };\n  };\n};\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}