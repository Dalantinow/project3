{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\game.js\";\nimport React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = event => {\n      const bidAmount = event.target.innerHTML;\n      this.setState({\n        bidAmount\n      });\n      Axios.post(\"http://local\");\n    };\n\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        bid: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          bid = _this$state.bid,\n          isLoaded = _this$state.isLoaded;\n    console.log(bid);\n\n    if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Betting Ticket\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, bid.teamOneName, \" vs \", bid.teamTwoName), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Time: \", moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Bid Amount\"), React.createElement(Form.Control, {\n        type: \"bidamount\",\n        placeholder: \"$0.00\",\n        id: \"bidamount\",\n        name: \"bidamount\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"bidbutton\",\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Card","Button","moment","Axios","Col","Form","Spinner","GamePage","Component","constructor","props","onClickHandler","event","bidAmount","target","innerHTML","setState","post","state","bid","bidamount","undefined","isLoaded","componentDidMount","get","then","result","data","error","render","console","log","span","offset","teamOneName","teamTwoName","Date","parseInt","commencementTime","format","username","handleChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bid: {},\n            bidamount: undefined,\n            isLoaded: false\n        }\n    }\n    componentDidMount() {\n        Axios.get(\"http://localhost:3001/bid\")\n        .then((result) => {\n          this.setState({\n            isLoaded: true,\n            bid: result.data\n          });\n        },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          });\n    }\n    onClickHandler = event => {\n      const bidAmount = event.target.innerHTML;\n      this.setState({bidAmount});\n      Axios.post(\"http://local\")\n    }\n\n    render() {\n        \n        const {bid, isLoaded} = this.state;\n        console.log(bid)\n        if (!isLoaded) {\n            return <Spinner animation=\"grow\" variant=\"warning\" />\n          } else {\n            return (\n            <Col md={{ span: 6, offset: 3 }}>\n            <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n                <Card.Text>Betting Ticket</Card.Text>\n                <Card.Body>\n      <Card.Title>{bid.teamOneName} vs {bid.teamTwoName}</Card.Title>\n      \n      <Card.Text>\n        Time: {moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n      </Card.Text>\n      <Form.Label>Bid Amount</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\ttype=\"bidamount\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"$0.00\"\n\t\t\t\t\t\t\t\t\tid=\"bidamount\"\n\t\t\t\t\t\t\t\t\tname=\"bidamount\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange} />\n    <Button className=\"bidbutton\" variant=\"warning\" value=\"#\"></Button>\n    \n    </Card.Body>\n            </Card>\n            </Col>\n        );\n    };\n};\n};\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}