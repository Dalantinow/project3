{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\news.js\";\nimport React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass News extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      error: null,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/scrape\").then(result => {\n      this.setState({\n        isLoaded: true,\n        articles: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          articles = _this$state.articles,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    } else if (loggedIn === true) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"col-2\",\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"News\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \" \", articles.map(article => React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: article.thumbnail,\n        alt: \"thumbnail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, article.title), React.createElement(Button, {\n        className: \"home-button\",\n        variant: \"warning\",\n        href: article.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Go\")))))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default News;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\news.js"],"names":["React","Card","Button","Col","Container","Axios","Spinner","News","Component","constructor","props","state","articles","error","isLoaded","componentDidMount","get","then","result","setState","data","render","message","loggedIn","map","article","thumbnail","title","link"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass News extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      error: null,\n      isLoaded: false,\n    };\n  };\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/scrape\")\n      .then((result) => {\n        this.setState({\n          isLoaded: true,\n          articles: result.data\n        });\n      },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n  }\n\n  render() {\n    const { articles, error, isLoaded } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <Spinner animation=\"grow\" variant=\"warning\" />\n    } else if (loggedIn === true) {\n      return (\n        <Container>\n          <Col className=\"col-2\" sm>\n            <Card bg=\"dark\" text=\"white\">\n              <Card.Body>\n                {/*<ButtonToolbar>\n               <MDBDropdown className=\"MBDDropdown\">\n                <MDBDropdownToggle id =\"upcoming-games\" className=\"home-button\" caret color=\"warning\">\n                  Upcoming Games\n                </MDBDropdownToggle>\n                <MDBDropdownMenu basic>\n                  <MDBDropdownItem active={this.state.scrape === \"cfb\"} onClick={this.scrapingCall(this)}>College Football (NCAAF)</MDBDropdownItem>\n                  <MDBDropdownItem active={this.state.scrape === \"nfl\"} onClick={this.scrapingCall(this)}>NFL</MDBDropdownItem>\n                  <MDBDropdownItem active={this.state.scrape === \"mlb\"} onClick={this.scrapingCall(this)}>MLB</MDBDropdownItem>\n                  <MDBDropdownItem active={this.state.scrape === \"mma\"} onClick={this.scrapingCall(this)}>MMA</MDBDropdownItem>\n                  <MDBDropdownItem active={this.state.scrape === \"mls\"} onClick={this.scrapingCall(this)}>MLS</MDBDropdownItem>\n                  <MDBDropdownItem active={this.state.scrape === \"nba\"} onClick={this.scrapingCall(this)}>NBA</MDBDropdownItem>\n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </ButtonToolbar> */}\n                {/* Eventually want to change the params of the news scraper to fill requests for leagues */}\n                <Card.Title>News</Card.Title>\n              </Card.Body>\n            </Card>\n            <br></br>\n            <div> {articles.map(article => (\n              <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n                <Card.Body>\n                  <img src={article.thumbnail} alt=\"thumbnail\"></img>\n                  <Card.Text>{article.title}</Card.Text>\n                  <Button className=\"home-button\" variant=\"warning\" href={article.link}>Go</Button>\n                </Card.Body>\n              </Card>\n            ))}\n            </div>\n          </Col>\n        </Container>\n      );\n    };\n  };\n};\nexport default News;"]},"metadata":{},"sourceType":"module"}