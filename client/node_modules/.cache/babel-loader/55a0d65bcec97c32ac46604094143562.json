{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\carousel.js\";\nimport React from \"react\";\nimport Carousel from 'react-bootstrap/Carousel';\nimport one from \"../assets/1.jpg\";\nimport two from \"../assets/2.jpg\";\nimport three from \"../assets/3.jpg\";\nimport four from \"../assets/4.jpg\";\nimport five from \"../assets/5.jpg\";\nimport six from \"../assets/6.jpg\";\nimport seven from \"../assets/7.jpg\";\nimport Axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass ControlledCarousel extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.state = {\n      index: 0,\n      direction: null,\n      articles: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/scrape\").then(result => {\n      this.setState({\n        isLoaded: true,\n        articles: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  handleSelect(selectedIndex, e) {\n    this.setState({\n      index: selectedIndex,\n      direction: e.direction\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          index = _this$state.index,\n          direction = _this$state.direction,\n          articles = _this$state.articles,\n          isLoaded = _this$state.isLoaded;\n\n    if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Carousel, {\n        activeIndex: index,\n        direction: direction,\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" \", articles.map(article => React.createElement(Carousel.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"d-block w-100\",\n        src: article.thumbnail,\n        caption: article.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })))));\n    }\n  }\n\n}\n\nexport default ControlledCarousel;","map":{"version":3,"sources":["c:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\carousel.js"],"names":["React","Carousel","one","two","three","four","five","six","seven","Axios","Spinner","ControlledCarousel","Component","constructor","props","context","handleSelect","bind","state","index","direction","articles","isLoaded","componentDidMount","get","then","result","setState","data","error","selectedIndex","e","render","map","article","thumbnail","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAGA,MAAMC,kBAAN,SAAiCX,KAAK,CAACY,SAAvC,CAAiD;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,KAAK,CAACe,GAAN,CAAU,8BAAV,EAEGC,IAFH,CAESC,MAAD,IAAY;AAChB,WAAKC,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAFL,OAAd;AAKD,KARH,EASKC,KAAD,IAAW;AACT,WAAKF,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE,IADE;AAEZO,QAAAA;AAFY,OAAd;AAID,KAdL;AAiBD;;AACDb,EAAAA,YAAY,CAACc,aAAD,EAAgBC,CAAhB,EAAmB;AAC7B,SAAKJ,QAAL,CAAc;AACZR,MAAAA,KAAK,EAAEW,aADK;AAEZV,MAAAA,SAAS,EAAEW,CAAC,CAACX;AAFD,KAAd;AAID;;AAEDY,EAAAA,MAAM,GAAG;AAAA,wBAC0C,KAAKd,KAD/C;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,SADR,eACQA,SADR;AAAA,UACmBC,QADnB,eACmBA,QADnB;AAAA,UAC6BC,QAD7B,eAC6BA,QAD7B;;AAEP,QAAI,CAACA,QAAL,EAAe;AACb,aAAO,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,OAAO,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,aACE,oBAAC,QAAD;AACE,QAAA,WAAW,EAAEH,KADf;AAEE,QAAA,SAAS,EAAEC,SAFb;AAGE,QAAA,QAAQ,EAAE,KAAKJ,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOK,QAAQ,CAACY,GAAT,CAAaC,OAAO,IACzB,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,GAAG,EAAEA,OAAO,CAACC,SAFf;AAGE,QAAA,OAAO,EAAED,OAAO,CAACE,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADK,CAAP,CALF,CADF;AAmBD;AACF;;AAhE8C;;AAmEjD,eAAezB,kBAAf","sourcesContent":["import React from \"react\";\nimport Carousel from 'react-bootstrap/Carousel'\nimport one from \"../assets/1.jpg\";\nimport two from \"../assets/2.jpg\";\nimport three from \"../assets/3.jpg\";\nimport four from \"../assets/4.jpg\";\nimport five from \"../assets/5.jpg\";\nimport six from \"../assets/6.jpg\";\nimport seven from \"../assets/7.jpg\";\nimport Axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\"\n\n\nclass ControlledCarousel extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleSelect = this.handleSelect.bind(this);\n\n    this.state = {\n      index: 0,\n      direction: null,\n      articles: [],\n      isLoaded: false\n    };\n  }\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/scrape\")\n\n      .then((result) => {\n        this.setState({\n          isLoaded: true,\n          articles: result.data\n        });\n\n      },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          })\n        }\n      )\n\n  };\n  handleSelect(selectedIndex, e) {\n    this.setState({\n      index: selectedIndex,\n      direction: e.direction,\n    });\n  }\n\n  render() {\n    const { index, direction, articles, isLoaded } = this.state;\n    if (!isLoaded) {\n      return <Spinner animation=\"grow\" variant=\"warning\" />\n    } else {\n      return (\n        <Carousel\n          activeIndex={index}\n          direction={direction}\n          onSelect={this.handleSelect}\n        >\n          <div> {articles.map(article => (\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src={article.thumbnail}\n                caption={article.title}\n              />\n            </Carousel.Item>\n          ))}\n          </div>\n\n        </Carousel>\n      );\n    }\n  }\n}\n\nexport default ControlledCarousel"]},"metadata":{},"sourceType":"module"}