{"ast":null,"code":"const mongoose = require('mongoose');\n\nconst Schema = mongoose.Schema;\n\nconst bcrypt = require('bcryptjs');\n\nmongoose.promise = Promise; // Define userSchema\n\nconst userSchema = new Schema({\n  username: {\n    type: String,\n    unique: false,\n    required: false\n  },\n  password: {\n    type: String,\n    unique: false,\n    required: false\n  },\n  credits: {\n    type: Number,\n    required: true,\n    default: 100\n  }\n}); // Define schema methods\n\nuserSchema.methods = {\n  checkPassword: function (inputPassword) {\n    return bcrypt.compareSync(inputPassword, this.password);\n  },\n  hashPassword: plainTextPassword => {\n    return bcrypt.hashSync(plainTextPassword, 10);\n  } // Define hooks for pre-saving\n\n};\nuserSchema.pre('save', function (next) {\n  if (!this.password) {\n    console.log('models/user.js =======NO PASSWORD PROVIDED=======');\n    next();\n  } else {\n    console.log('models/user.js hashPassword in pre save');\n    this.password = this.hashPassword(this.password);\n    next();\n  }\n});\nconst User = mongoose.model('User', userSchema);\nmodule.exports = User;","map":null,"metadata":{},"sourceType":"script"}