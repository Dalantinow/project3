{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\home.js\";\nimport React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport ControlledCarousel from './carousel';\nimport Axios from \"axios\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      articles: [],\n      thumbnails: []\n    };\n  }\n\n  componentDidMount() {\n    var apiKey = process.env.apiKey;\n    fetch(\"https://api.the-odds-api.com/v3/odds?sport=soccer_usa_mls&region=us&mkt=h2h&apiKey=71bb5796ac3d48b345d68c07d65c5bbb\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.data\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    Axios.get(\"http://localhost:3001/scrape\").then(result => {\n      this.setState({\n        isLoaded: true,\n        articles: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    Axios.get(\"http://localhost:3001/thumbnail\").then(result => {\n      console.log(result);\n      this.setState({\n        isLoaded: true,\n        thumbnails: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items,\n          articles = _this$state.articles,\n          thumbnails = _this$state.thumbnails; // console.log(items)\n    // console.log(articles)\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(ControlledCarousel, {\n        className: \"carousel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Upcoming Games\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" \", items.map(item => React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, item.teams[0], \" vs \", item.teams[1]), React.createElement(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, item.home_team, \" at Home\"), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"League: \", item.sport_nice), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Time: \", moment(new Date(parseInt(item.commence_time * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(Card.Subtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Bet On:  \"), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"home-button\",\n        href: \"#\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, item.teams[0]), React.createElement(Button, {\n        className: \"home-button\",\n        href: \"#\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, item.teams[1]))))))), React.createElement(Col, {\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Sports News\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \" \", thumbnails.map(thumbnail => React.createElement(\"img\", {\n        src: thumbnail.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \" \", articles.map(article => React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, article.title), React.createElement(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"home-button\",\n        variant: \"warning\",\n        href: article.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Go\")))))))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["c:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\home.js"],"names":["React","Component","Card","Button","Col","Row","Container","moment","ControlledCarousel","Axios","ButtonToolbar","Spinner","Home","constructor","props","state","error","isLoaded","items","articles","thumbnails","componentDidMount","apiKey","process","env","fetch","then","res","json","result","setState","data","get","console","log","render","message","map","item","teams","home_team","sport_nice","Date","parseInt","commence_time","format","thumbnail","url","article","title","link"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport ControlledCarousel from './carousel';\nimport Axios from \"axios\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      articles: [],\n      thumbnails: []\n    }\n  };\n\n\n  componentDidMount() {\n    var apiKey = process.env.apiKey;\n    fetch(\"https://api.the-odds-api.com/v3/odds?sport=soccer_usa_mls&region=us&mkt=h2h&apiKey=71bb5796ac3d48b345d68c07d65c5bbb\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.data\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n\n      );\n    Axios.get(\"http://localhost:3001/scrape\")\n       \n      .then((result) => {\n        this.setState({\n          isLoaded: true,\n          articles: result.data\n        });\n       \n      },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          })\n        }\n      )\n      Axios.get(\"http://localhost:3001/thumbnail\")\n       \n      .then((result) => {\n        console.log(result)\n        this.setState({\n          isLoaded: true,\n          thumbnails: result.data\n         \n        });\n        \n      },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          })\n        }\n      )\n  };\n\n\n  render() {\n    const { error, isLoaded, items, articles, thumbnails } = this.state;\n    // console.log(items)\n    // console.log(articles)\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return  <Spinner animation=\"grow\" variant=\"warning\" />\n    } else {\n      return (\n        <div>\n          <Container>\n            <ControlledCarousel className=\"carousel\" />\n            <Row>\n\n              <Col sm>\n                <Card bg=\"dark\" text=\"white\">\n                  <Card.Body>\n                    <Card.Title>Upcoming Games</Card.Title>\n                  </Card.Body>\n                </Card>\n                <br></br>\n                <div> {items.map(item => (\n                  <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n                    <Card.Body>\n                      <Card.Title>{item.teams[0]} vs {item.teams[1]}</Card.Title>\n                      <Card.Subtitle className=\"mb-2 text-muted\">{item.home_team} at Home</Card.Subtitle>\n                      <Card.Text>\n                        League: {item.sport_nice}\n                      </Card.Text>\n                      <Card.Text>\n                        Time: {moment(new Date(parseInt(item.commence_time * 1000))).format('MMMM Do YYYY, h:mm a')}\n                      </Card.Text>\n                      <Card.Subtitle>Bet On:  </Card.Subtitle>\n                      <ButtonToolbar>\n                      <Button className=\"home-button\" href=\"#\" variant=\"warning\">{item.teams[0]}</Button>\n                      <Button  className=\"home-button\" href=\"#\" variant=\"warning\">{item.teams[1]}</Button>\n                      </ButtonToolbar>\n                      \n                    </Card.Body>\n                  </Card>\n                ))}\n\n                </div>\n              </Col>\n              <Col sm>\n                <Card bg=\"dark\" text=\"white\">\n                  <Card.Body>\n                    <Card.Title>Sports News</Card.Title>\n                  </Card.Body>\n                </Card>\n\n                <br></br>\n                  <div> {thumbnails.map(thumbnail => (\n                     <img src={thumbnail.url}></img>\n                     ))}\n                     </div>\n                <div> { articles.map(article => ( \n                <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n                  <Card.Body>\n                   \n                    <Card.Text>{article.title}</Card.Text>\n                    <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\n                    <Button className=\"home-button\" variant=\"warning\" href={article.link}>Go</Button>\n                  </Card.Body>\n                </Card>\n                ))}\n                </div>\n                 \n\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )\n    };\n  };\n};\n\n\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}