{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\concludedScores.js\";\nimport React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport Axios from \"axios\";\n\nclass ConcludedScores extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    // var apiToken = process.env.apiToken;\n    Axios.get(\"https://api.mysportsfeeds.com/v2.1/pull/mlb/current_season.json\", {\n      'headers': {\n        \"Authorization\": \"Basic \" + btoa({\n          apikey_token\n        } + \":\" + MYSPORTSFEEDS)\n      }\n    }).then(response => response.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.data\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Loading Games...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Concluded\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" \", items.matches.map(item => React.createElement(Card, {\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, item.awayTeam.name, \" at \", item.homeTeam.name), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, item.score.fullTime.awayTeam, \"     \", item.score.fullTime.homeTeam), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Winner: \", item.score.winner), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Time (EST): \", moment(item.utcDate).format('MMMM Do YYYY'))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default ConcludedScores;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\concludedScores.js"],"names":["React","Component","Card","Col","Row","Container","moment","Axios","ConcludedScores","constructor","props","state","error","isLoaded","items","componentDidMount","get","btoa","apikey_token","MYSPORTSFEEDS","then","response","json","result","setState","data","render","message","matches","map","item","awayTeam","name","homeTeam","score","fullTime","winner","utcDate","format"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport Axios from \"axios\";\n\nclass ConcludedScores extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        }\n    };\n\n\n    componentDidMount() {\n        // var apiToken = process.env.apiToken;\n       Axios.get(\"https://api.mysportsfeeds.com/v2.1/pull/mlb/current_season.json\", {\n           'headers': {\n            \"Authorization\": \"Basic \" + btoa({apikey_token} + \":\" + MYSPORTSFEEDS)\n           }\n       })\n        .then(response => response.json())\n            .then((result) => {\n                this.setState({\n                    isLoaded: true,\n                    items: result.data\n                });\n            },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            );\n            \n    };\n\n\n    render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading Games...</div>;\n\n        } else { \n            return (\n                <div>\n                    <Container>\n                        <Row>\n\n                            <Col sm>\n                                <Card bg=\"dark\" text=\"white\">\n                                    <Card.Body>\n                                        <Card.Title>Concluded</Card.Title>\n                                    </Card.Body>\n                                </Card>\n                                <br></br>\n                                <div> {items.matches.map(item => (\n                                    <Card bg=\"dark\" text=\"white\">\n                                        <Card.Body>\n                                            <Card.Title>{item.awayTeam.name} at {item.homeTeam.name}</Card.Title>\n                                            <Card.Text>\n                                                {item.score.fullTime.awayTeam}     {item.score.fullTime.homeTeam}\n                                            </Card.Text>\n                                            <Card.Text>\n                                                Winner: {item.score.winner}\n                                            </Card.Text>\n                                            <Card.Text>\n                                                Time (EST): {moment(item.utcDate).format('MMMM Do YYYY')}\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                ))}\n                                    <br></br>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            );\n        };\n    };\n};\n\nexport default ConcludedScores;"]},"metadata":{},"sourceType":"module"}