{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\home.js\";\nimport React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport ControlledCarousel from './carousel';\nimport Axios from \"axios\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\nfunction oddsApiCall(sport) {\n  fetch(\"https://api.the-odds-api.com/v3/odds?sport=\" + sport + \"&region=us&mkt=h2h&apiKey=0cf960a0668ac664d33731f63e58304d\").then(res => res.json()).then(result => {\n    console.log(result);\n    this.setState({\n      isLoaded: true,\n      items: result.data\n    });\n  }, // Note: it's important to handle errors here\n  // instead of a catch() block so that we don't swallow\n  // exceptions from actual bugs in components.\n  error => {\n    this.setState({\n      isLoaded: true,\n      error\n    });\n  });\n}\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = event => {\n      const league = event.target.innerHTML;\n      console.log(league);\n\n      switch (league) {\n        case \"NFL\":\n          oddsApiCall(\"americanfootball_nfl\");\n          break;\n\n        case \"College Football (NCAAF)\":\n          oddsApiCall(\"americanfootball_ncaaf\");\n          break;\n\n        case \"MMA\":\n          oddsApiCall(\"mma_mixed_martial_arts\");\n          break;\n\n        case \"MLS\":\n          oddsApiCall(\"soccer_usa_mls\");\n          break;\n\n        case \"MLB\":\n          oddsApiCall(\"baseball_mlb\");\n          break;\n\n        default:\n          console.log(\"something went horribly wrong...\");\n      }\n\n      this.setState({\n        league\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      articles: [],\n      league: \"\"\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/scrape\").then(result => {\n      this.setState({\n        isLoaded: true,\n        articles: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items,\n          articles = _this$state.articles,\n          league = _this$state.league;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(ControlledCarousel, {\n        className: \"carousel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(MDBDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(MDBDropdownToggle, {\n        caret: true,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.state.value), React.createElement(MDBDropdownMenu, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(MDBDropdownItem, {\n        active: this.state.value === \"americanfootball_ncaaf\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"College Football (NCAAF)\"), React.createElement(MDBDropdownItem, {\n        active: this.state.value === \"americanfootball_nfl\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"NFL\"), React.createElement(MDBDropdownItem, {\n        active: this.state.value === \"baseball_mlb\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"MLB\"), React.createElement(MDBDropdownItem, {\n        active: this.state.value === \"mma_mixed_martial_arts\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"MMA\"), React.createElement(MDBDropdownItem, {\n        active: this.state.value === \"soccer_usa_mls\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"MLS\")))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \" \", items.map(item => React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, item.teams[0], \" vs \", item.teams[1]), React.createElement(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, item.home_team, \" at Home\"), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"League: \", item.sport_nice), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Time: \", moment(new Date(parseInt(item.commence_time * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(Card.Subtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Bet On:  \"), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"home-button\",\n        href: \"#\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, item.teams[0]), React.createElement(Button, {\n        className: \"home-button\",\n        href: \"#\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, item.teams[1]))))))), React.createElement(Col, {\n        sm: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Sports News\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \" \", articles.map(article => React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: article.thumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, article.title), React.createElement(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"home-button\",\n        variant: \"warning\",\n        href: article.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Go\")))))))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["c:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\home.js"],"names":["React","Component","Card","Button","Col","Row","Container","moment","ControlledCarousel","Axios","ButtonToolbar","Spinner","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","oddsApiCall","sport","fetch","then","res","json","result","console","log","setState","isLoaded","items","data","error","Home","constructor","props","onClickHandler","event","league","target","innerHTML","state","articles","componentDidMount","get","render","message","value","map","item","teams","home_team","sport_nice","Date","parseInt","commence_time","format","article","thumbnail","title","link"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport moment from 'moment';\nimport ControlledCarousel from './carousel';\nimport Axios from \"axios\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\n\n\nfunction oddsApiCall(sport) {\n  fetch(\"https://api.the-odds-api.com/v3/odds?sport=\" + sport + \"&region=us&mkt=h2h&apiKey=0cf960a0668ac664d33731f63e58304d\")\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n        this.setState({\n          isLoaded: true,\n          items: result.data\n        });\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n}\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      articles: [],\n      league: \"\"\n    }\n  };\n\n \n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/scrape\")\n\n      .then((result) => {\n        this.setState({\n          isLoaded: true,\n          articles: result.data\n        });\n\n      },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          })\n        }\n      )\n\n  };\n\n \n\n  onClickHandler = event => {\n    const league = event.target.innerHTML;\n    console.log(league);\n    switch (league) {\n      case \"NFL\":\n        oddsApiCall(\"americanfootball_nfl\")\n        break;\n      case \"College Football (NCAAF)\":\n        oddsApiCall(\"americanfootball_ncaaf\")\n        break;\n      case \"MMA\":\n          oddsApiCall(\"mma_mixed_martial_arts\")\n      break;\n      case \"MLS\":\n        oddsApiCall(\"soccer_usa_mls\")\n        break;\n      case \"MLB\":\n        oddsApiCall(\"baseball_mlb\")\n        break;\n        default:\n          console.log(\"something went horribly wrong...\")\n    }\n    this.setState({ league })\n  }\n\n\n  render() {\n    const { error, isLoaded, items, articles, league } = this.state;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <Spinner animation=\"grow\" variant=\"warning\" />\n    } else {\n      return (\n        <div>\n          <Container>\n            <ControlledCarousel className=\"carousel\" />\n            <Row>\n\n              <Col sm>\n                <Card bg=\"dark\" text=\"white\">\n                  <Card.Body>\n                    <ButtonToolbar>\n                      <MDBDropdown>\n                        <MDBDropdownToggle caret color=\"warning\">\n                          {this.state.value}\n                        </MDBDropdownToggle>\n                        <MDBDropdownMenu basic>\n                          <MDBDropdownItem active={this.state.value === \"americanfootball_ncaaf\"} onClick={this.onClickHandler}>College Football (NCAAF)</MDBDropdownItem>\n                          <MDBDropdownItem active={this.state.value === \"americanfootball_nfl\"} onClick={this.onClickHandler}>NFL</MDBDropdownItem>\n                          <MDBDropdownItem active={this.state.value === \"baseball_mlb\"} onClick={this.onClickHandler}>MLB</MDBDropdownItem>\n                          <MDBDropdownItem active={this.state.value === \"mma_mixed_martial_arts\"} onClick={this.onClickHandler}>MMA</MDBDropdownItem>\n                          <MDBDropdownItem active={this.state.value === \"soccer_usa_mls\"} onClick={this.onClickHandler}>MLS</MDBDropdownItem>\n                        </MDBDropdownMenu>\n                      </MDBDropdown>\n                    </ButtonToolbar>\n                  </Card.Body>\n                </Card>\n                <br></br>\n                <div> {items.map(item => (\n                  <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n                    <Card.Body>\n                      <Card.Title>{item.teams[0]} vs {item.teams[1]}</Card.Title>\n                      <Card.Subtitle className=\"mb-2 text-muted\">{item.home_team} at Home</Card.Subtitle>\n                      <Card.Text>\n                        League: {item.sport_nice}\n                      </Card.Text>\n                      <Card.Text>\n                        Time: {moment(new Date(parseInt(item.commence_time * 1000))).format('MMMM Do YYYY, h:mm a')}\n                      </Card.Text>\n                      <Card.Subtitle>Bet On:  </Card.Subtitle>\n                      <ButtonToolbar>\n                        <Button className=\"home-button\" href=\"#\" variant=\"warning\">{item.teams[0]}</Button>\n                        <Button className=\"home-button\" href=\"#\" variant=\"warning\">{item.teams[1]}</Button>\n                      </ButtonToolbar>\n\n                    </Card.Body>\n                  </Card>\n                ))}\n\n                </div>\n              </Col>\n              <Col sm>\n                <Card bg=\"dark\" text=\"white\">\n                  <Card.Body>\n                    <Card.Title>Sports News</Card.Title>\n                  </Card.Body>\n                </Card>\n\n                <br></br>\n\n                <div> {articles.map(article => (\n                  <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n                    <Card.Body>\n                      <img src={article.thumbnail}></img>\n                      <Card.Text>{article.title}</Card.Text>\n                      <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\n                      <Button className=\"home-button\" variant=\"warning\" href={article.link}>Go</Button>\n                    </Card.Body>\n                  </Card>\n                ))}\n                </div>\n\n              </Col>\n            </Row>\n          </Container>\n        </div >\n      )\n    };\n  };\n};\n\n\n\nexport default Home;\n\n"]},"metadata":{},"sourceType":"module"}