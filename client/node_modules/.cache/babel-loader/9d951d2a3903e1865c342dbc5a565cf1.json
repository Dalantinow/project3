{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\game.js\";\nimport React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:3001/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        bid: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log('handleSubmit');\n    axios.post('http://localhost:3001/user/login', {\n      username: this.state.username,\n      password: this.state.password\n    }).then(response => {\n      console.log('login response: ');\n      console.log(response);\n\n      if (response.status === 200) {\n        // update App.js state\n        this.props.updateUser({\n          loggedIn: true,\n          username: response.data.username\n        }); // update the state to redirect to home\n\n        this.setState({\n          redirectTo: '/'\n        });\n      }\n    }).catch(error => {\n      console.log('login error: ');\n      console.log(error);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          bid = _this$state.bid,\n          isLoaded = _this$state.isLoaded;\n    console.log(bid);\n\n    if (!isLoaded) {\n      return React.createElement(Spinner, {\n        animation: \"grow\",\n        variant: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"jawn\",\n        bg: \"dark\",\n        text: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Betting Ticket\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, bid.teamOneName, \" vs \", bid.teamTwoName), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Time: \", moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Bid Amount\"), React.createElement(Form.Control, {\n        type: \"bidamount\",\n        placeholder: \"$0.00\",\n        id: \"bidamount\",\n        name: \"bidamount\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"bidbutton\",\n        variant: \"warning\",\n        value: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Card","Button","moment","Axios","Col","Form","Spinner","GamePage","Component","constructor","props","state","bid","bidamount","undefined","isLoaded","componentDidMount","get","then","result","setState","data","error","handleSubmit","event","preventDefault","console","log","axios","post","username","password","response","status","updateUser","loggedIn","redirectTo","catch","render","span","offset","teamOneName","teamTwoName","Date","parseInt","commencementTime","format","handleChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bid: {},\n            bidamount: undefined,\n            isLoaded: false\n        }\n    }\n    componentDidMount() {\n        Axios.get(\"http://localhost:3001/bid\")\n        .then((result) => {\n          this.setState({\n            isLoaded: true,\n            bid: result.data\n          });\n        },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          });\n    }\n    handleSubmit(event) {\n      event.preventDefault()\n      console.log('handleSubmit')\n      axios\n          .post('http://localhost:3001/user/login', {\n              username: this.state.username,\n              password: this.state.password\n          })\n          .then(response => {\n              console.log('login response: ')\n              console.log(response)\n              if (response.status === 200) {\n                  // update App.js state\n                  this.props.updateUser({\n                      loggedIn: true,\n                      username: response.data.username\n                  })\n                  // update the state to redirect to home\n                  this.setState({\n                      redirectTo: '/'\n                  })\n              }\n          }).catch(error => {\n              console.log('login error: ')\n              console.log(error);\n          });\n  };\n    render() {\n        \n        const {bid, isLoaded} = this.state;\n        console.log(bid)\n        if (!isLoaded) {\n            return <Spinner animation=\"grow\" variant=\"warning\" />\n          } else {\n            return (\n            <Col md={{ span: 6, offset: 3 }}>\n            <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n                <Card.Text>Betting Ticket</Card.Text>\n                <Card.Body>\n      <Card.Title>{bid.teamOneName} vs {bid.teamTwoName}</Card.Title>\n      \n      <Card.Text>\n        Time: {moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n      </Card.Text>\n      <Form.Label>Bid Amount</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\ttype=\"bidamount\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"$0.00\"\n\t\t\t\t\t\t\t\t\tid=\"bidamount\"\n\t\t\t\t\t\t\t\t\tname=\"bidamount\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange} />\n    <Button className=\"bidbutton\" variant=\"warning\" value=\"#\">Submit</Button>\n    \n    </Card.Body>\n            </Card>\n            </Col>\n        );\n    };\n};\n};\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}