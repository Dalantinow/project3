{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dalan\\\\DemoDownload\\\\project3\\\\client\\\\src\\\\components\\\\game.js\";\nimport React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bid: {},\n      bidamount: undefined,\n      isLoaded: false,\n      credits: null\n    };\n  }\n\n  componentDidMount() {\n    const data = {};\n    this.getUser();\n    Axios.get(\"http://localhost:3001/bid\").then(result => {\n      this.setState({\n        isLoaded: true,\n        bid: result.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          credits: response.data.user.credits\n        });\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      }\n\n      ;\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log('handleSubmit');\n    Axios.put('http://localhost:3001/user/', {\n      username: this.state.username,\n      password: this.state.password\n    }).then(response => {\n      console.log('login response: ');\n      console.log(response);\n\n      if (response.status === 200) {\n        // update App.js state\n        this.props.updateUser({\n          loggedIn: true,\n          username: response.data.username\n        }); // update the state to redirect to home\n\n        this.setState({\n          redirectTo: '/'\n        });\n      }\n    }).catch(error => {\n      console.log('login error: ');\n      console.log(error);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          bid = _this$state.bid,\n          isLoaded = _this$state.isLoaded,\n          credits = _this$state.credits,\n          bidAmount = _this$state.bidAmount;\n    console.log(bid);\n\n    for (var i = 0; i < bid.length; i++) {\n      console.log(bid[i]._id);\n      console.log(window.location.pathname);\n\n      if (\"/bid/\" + bid[i]._id === window.location.pathname) {\n        return React.createElement(Col, {\n          md: {\n            span: 6,\n            offset: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"jawn\",\n          bg: \"dark\",\n          text: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Credits: \", this.state.credits), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Betting Ticket\"), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, bid[i].teamOneName, \" vs \", bid[i].teamTwoName), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Time: \", moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')), React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Bid Amount\"), React.createElement(Form.Control, {\n          type: \"bidamount\",\n          placeholder: \"$0.00\",\n          id: \"bidamount\",\n          name: \"bidamount\",\n          value: this.state.bidAmount,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: this.handleSubmit,\n          variant: \"warning\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"Submit\"))));\n      }\n\n      ;\n    }\n  }\n\n}\n\n;\nexport default GamePage;","map":{"version":3,"sources":["C:\\Users\\dalan\\DemoDownload\\project3\\client\\src\\components\\game.js"],"names":["React","Card","Button","moment","Axios","Col","Form","Spinner","GamePage","Component","constructor","props","state","bid","bidamount","undefined","isLoaded","credits","componentDidMount","data","getUser","get","then","result","setState","error","response","console","log","user","loggedIn","username","handleSubmit","event","preventDefault","put","password","status","updateUser","redirectTo","catch","render","bidAmount","i","length","_id","window","location","pathname","span","offset","teamOneName","teamTwoName","Date","parseInt","commencementTime","format","handleChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport moment from 'moment';\nimport Axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass GamePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bid: {},\n            bidamount: undefined,\n            isLoaded: false,\n            credits: null\n        }\n    }\n    componentDidMount() {\n      const data = {\n\n      }\n      this.getUser();\n        Axios.get(\"http://localhost:3001/bid\")\n        .then((result) => {\n          this.setState({\n            isLoaded: true,\n            bid: result.data\n          });\n        },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          });\n    }\n    \n  getUser() {\n    Axios.get('http://localhost:3001/user').then(response => {\n      console.log(response.data);\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username,\n          credits: response.data.user.credits\n\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n      };\n    });\n  };\n    handleSubmit(event) {\n      event.preventDefault()\n      console.log('handleSubmit')\n      Axios\n          .put('http://localhost:3001/user/', {\n              username: this.state.username,\n              password: this.state.password\n          })\n          .then(response => {\n              console.log('login response: ')\n              console.log(response)\n              if (response.status === 200) {\n                  // update App.js state\n                  this.props.updateUser({\n                      loggedIn: true,\n                      username: response.data.username\n                  })\n                  // update the state to redirect to home\n                  this.setState({\n                      redirectTo: '/'\n                  })\n              }\n          }).catch(error => {\n              console.log('login error: ')\n              console.log(error);\n          });\n  };\n    render() {\n        \n        const {bid, isLoaded, credits, bidAmount} = this.state;\n       console.log(bid);\n       \n        for(var i = 0; i < bid.length; i++) {\n          console.log(bid[i]._id)\n          console.log(window.location.pathname)\n            if(\"/bid/\" + bid[i]._id === window.location.pathname) {\n              \n             \n                return (\n                  \n                <Col md={{ span: 6, offset: 3 }}>\n                <Card className=\"jawn\" bg=\"dark\" text=\"white\">\n                    <Card.Text>Credits: {this.state.credits}</Card.Text>\n                    <Card.Text>Betting Ticket</Card.Text>\n                    <Card.Body>\n          <Card.Title>{bid[i].teamOneName} vs {bid[i].teamTwoName}</Card.Title>\n          \n          <Card.Text>\n            Time: {moment(new Date(parseInt(bid.commencementTime * 1000))).format('MMMM Do YYYY, h:mm a')}\n          </Card.Text>\n          <Form.Label>Bid Amount</Form.Label>\n                    <Form.Control\n                      type=\"bidamount\"\n                      placeholder=\"$0.00\"\n                      id=\"bidamount\"\n                      name=\"bidamount\"\n                      value={this.state.bidAmount}\n                      onChange={this.handleChange} />\n          <Button onClick={this.handleSubmit} variant=\"warning\" type=\"submit\">\n                  Submit\n                  </Button>\n        \n        </Card.Body>\n                </Card>\n                </Col>\n            );\n      \n    };\n            }\n          \n        }\n     \n};\nexport default GamePage;"]},"metadata":{},"sourceType":"module"}